// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostsVerify.Poc.Api.Infrastructure.Storage.Relational.EntityFrameworkCore;

#nullable disable

namespace PostsVerify.Poc.Api.Infrastructure.Storage.Relational.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(PostsVerifyDbContext))]
    [Migration("20250621145632_CreateModel")]
    partial class CreateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateLastScoreCalculation")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("SourceId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Vote")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Post", b =>
                {
                    b.HasOne("PostsVerify.Poc.Api.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("PostsVerify.Poc.Api.Domain.User", "AuthorUser")
                        .WithMany("AuthoredPosts")
                        .HasForeignKey("AuthorUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PostsVerify.Poc.Api.Domain.User", "CreatorUser")
                        .WithMany("CreatedPosts")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PostsVerify.Poc.Api.Domain.Source", "Source")
                        .WithMany("Posts")
                        .HasForeignKey("SourceId");

                    b.Navigation("Area");

                    b.Navigation("AuthorUser");

                    b.Navigation("CreatorUser");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Review", b =>
                {
                    b.HasOne("PostsVerify.Poc.Api.Domain.Post", "Post")
                        .WithMany("Reviews")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostsVerify.Poc.Api.Domain.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.User", b =>
                {
                    b.HasOne("PostsVerify.Poc.Api.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Post", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.Source", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("PostsVerify.Poc.Api.Domain.User", b =>
                {
                    b.Navigation("AuthoredPosts");

                    b.Navigation("CreatedPosts");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
